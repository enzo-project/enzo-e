Import('env')
Import('parallel_run')
Import('serial_run')
Import('ip_charm')

Import('bin_path')
Import('test_path')

#----------------------------------------------------------
#defines
#----------------------------------------------------------

env['CPIN'] = 'touch parameters.out; mv parameters.out ${TARGET}.in'
env['RMIN'] = 'rm -f parameters.out'
env['clocal_cmd'] = '++local'


date_cmd = 'echo $TARGET > test/STATUS; echo "---------------------"; date +"%Y-%m-%d %H:%M:%S";'

make_movie = Builder(action = "png2swf -r 5 -o $TARGET ${ARGS} ")
png_to_gif = Builder(action = "convert -delay 5 -loop 0 ${ARGS} $TARGET ")

env.Append(BUILDERS = { 'MakeMovie' : make_movie})
env.Append(BUILDERS = { 'pngToGif'  : png_to_gif})




run_initial_png = Builder(action = "$RMIN; " + date_cmd + parallel_run + " $SOURCE $clocal_cmd  $ARGS " + " > $TARGET 2>&1; $CPIN; $COPY")
env.Append(BUILDERS = { 'RunInitialPng' : run_initial_png } )
env_mv_initial_png = env.Clone(COPY = 'mkdir -p ' + test_path + '/Performance/InitialPng; mv `ls *.png *.h5` ' + test_path + '/Performance/InitialPng')


#-------------------------------------------------------------
#load balancing
#-------------------------------------------------------------






balance_initial_png = env_mv_initial_png.RunInitialPng (
     'test_initial_png.unit',
     bin_path + '/enzo-e',
     ARGS='input/HelloWorld/initial_png.in')

Clean(balance_initial_png,
     [Glob('#/' + test_path + '/InitialPng/initial_png.png'),
      'test_initial_png.unit'])

env.MakeMovie("/InitialPng/initial_png.swf", "test_initial_png.unit", \
              ARGS = test_path + "/Performance/InitialPng/initial_png-??.png");
env.PngToGif("/InitialPng/initial_png.gif", "test_initial_png.unit", \
              ARGS = test_path + "/Performance/InitialPng/initial_png-??.png");
