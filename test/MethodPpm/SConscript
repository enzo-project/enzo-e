Import('env')
Import('parallel_run')
Import('serial_run')
Import('ip_charm')

Import('bin_path')
Import('test_path')

#import os
#----------------------------------------------------------
#defines
#----------------------------------------------------------

env['CPIN'] = 'touch parameters.out; mv parameters.out ${TARGET}.in'
env['RMIN'] = 'rm -f parameters.out'
env['clocal_cmd'] = '++local'

#charm_args = os.getenv('CHARM_ARGS','')

date_cmd = 'echo $TARGET > test/STATUS; echo "---------------------"; date +"%Y-%m-%d %H:%M:%S";'

make_movie = Builder(action = "png2swf -r 5 -o $TARGET ${ARGS} ")
png_to_gif = Builder(action = "convert -delay 5 -loop 0 ${ARGS} $TARGET ")

env.Append(BUILDERS = { 'MakeMovie' : make_movie})
env.Append(BUILDERS = { 'pngToGif'  : png_to_gif})


run_ppm1 = Builder(action = "$RMIN; " + date_cmd + serial_run + " $SOURCE $ARGS > $TARGET 2>&1; $CPIN; $COPY")
env.Append(BUILDERS = { 'RunPpm1' : run_ppm1 } )
env_mv_ppm1 = env.Clone(COPY = 'mkdir -p ' + test_path + '/MethodPpm/Ppm-1; mv `ls *.png *.h5` ' + test_path + '/MethodPpm/Ppm-1')


run_ppm8 = Builder(action = "$RMIN; " + date_cmd + parallel_run + " $SOURCE $clocal_cmd $ARGS " + " > $TARGET 2>&1; $CPIN; $COPY")
env.Append(BUILDERS = { 'RunPpm8' : run_ppm8 } )
env_mv_ppm8 = env.Clone(COPY = 'mkdir -p ' + test_path + '/MethodPpm/Ppm-8; mv `ls *.png *.h5` ' + test_path + '/MethodPpm/Ppm-8')


#-------------------------------------------------------------
#load balancing
#-------------------------------------------------------------

#serial
balance_ppm_1 = env_mv_ppm1.RunSerial (
     'test_method_ppm-1.unit',
     bin_path + '/enzo-e',
     ARGS='input/PPM/method_ppm-1.in')

Clean(balance_ppm_1,
     [Glob('#/' + test_path + '/Ppm-1/method_ppm-1*.png'),
      Glob('#/' + test_path + '/Ppm-1/method_ppm-1*.h5')])

env.MakeMovie("/Ppm-1/method_ppm-1.swf", "test_method_ppm-1.unit", \
              ARGS = test_path + "/MethodPpm/Ppm-1/method_ppm-1*.png");
env.PngToGif("/Ppm-1/method_ppm-1.gif", "test_method_ppm-1.unit", \
              ARGS = test_path + "/MethodPpm/Ppm-1/method-ppm-1*.png");


#parallel

balance_ppm_8 = env_mv_ppm8.RunPpm8 (
     'test_method_ppm-8.unit',
     bin_path + '/enzo-e',
     ARGS='input/PPM/method_ppm-8.in')

Clean(balance_ppm_8,
     [Glob('#/' + test_path + '/Ppm-8/method_ppm-8*.png'),
      Glob('#/' + test_path + '/Ppm-8/method_ppm-8*.h5')])

env.MakeMovie("/Ppm-8/method_ppm-8.swf", "test_method_ppm-8.unit", \
              ARGS = test_path + "/MethodPpm/Ppm-8/method_ppm-8*.png");
env.PngToGif("/Ppm-8/method_ppm-8.gif", "test_method_ppm-8.unit", \
              ARGS = test_path + "/MethodPpm/Ppm-8/method_ppm-8*.png");
