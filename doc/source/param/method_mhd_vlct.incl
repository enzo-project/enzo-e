:p:`Method:mhd_vlct` parameters are used to initialize parameters for
Enzo-E's VL (+ CT) (magneto)hydrodynamic integrator.

The Method:mhd_vlct:mhd_choice determines whether the method is used as a pure hydrodynamic integrator or a MHD integrator that uses constrained transport.

----

.. par:parameter:: Method:mhd_vlct:mhd_choice

   :Summary: :s:`Denotes handling of bfields (or lack thereof)`
   :Type:   :par:typefmt:`string`
   :Default: :d:`none`
   :Scope:     :z:`Enzo`

   :e:`Denotes how the integrator handles magentic fields. This must be
   specified. Valid choices include:`

     * ``"no_bfield"`` :e:`The integrator acts as a pure hydrodynamical
       integrator; magnetic fields are ignored entirely.`

     * ``"constrained_transport"`` :e:`Magnetic fields are evolved using
       constrained transport. The primary representation of the magnetic
       fields are stored in face-centered cello fields and cell-centered
       cello-fields are used to store a secondary representation.`

   :e:`This may be updated to include additional options in the
   future. For more details see`
   :ref:`vlct_overview`

   :e:`For debugging purposes, there is technically one last choice,`
   ``"unsafe_constant_uniform".`` :e:`This is NOT meant for science runs.
   When this option is selected, the magnetic field is treated as a
   cell-centered conserved quantity and the magnetic fluxes computed in
   the Riemann solver are directly added to to the magnetic fields
   (magnetic field values are only stored in cell-centered Cello
   fields). Outside of very specific cases, this will NOT enforce the
   divergence-free constrain of the magnetic fields to grow. To use this
   option, you need to explicitly comment out an error in`
   ``"enzo_EnzoMethodMHDVlct.cpp"``.

----

.. par:parameter:: Method:mhd_vlct:riemann_solver

   :Summary: :s:`name of the Riemann solver to use`
   :Type:   :par:typefmt:`string`
   :Default: :d:`hlld`
   :Scope:     :z:`Enzo`

   :e:`Name of the Riemann solver to use. For a list of options, see`
   :ref:`using-vlct-riemann-solver`

----

.. par:parameter:: Method:mhd_vlct:half_dt_reconstruct_method

   :Summary: :s:`name of the reconstruction method to use for the full timestep`
   :Type:   :par:typefmt:`string`
   :Default: :d:`nn`
   :Scope:     :z:`Enzo`

   :e:`Name of the interpolation method used to reconstruct face-centered
   primitives for the first half timestep.` ``"nn"`` :e:`is recommended
   for this method (problems arise if` ``"plm"`` :e:`or` ``"plm_athena"``
   :e:`are used). For a list of options, see`
   :ref:`using-vlct-reconstruction`

----

.. par:parameter:: Method:mhd_vlct:full_dt_reconstruct_method

   :Summary: :s:`name of the reconstruction method to use for the full timestep`
   :Type:   :par:typefmt:`string`
   :Default: :d:`plm`
   :Scope:     :z:`Enzo`

   :e:`Name of the interpolation method used to reconstruct face-centered
   primitives for the full timestep. For a list of options, see`
   :ref:`using-vlct-reconstruction`

----

.. par:parameter:: Method:mhd_vlct:theta_limiter

   :Summary: :s:`controls the dissipation of certain slope limiters.`
   :Type:   :par:typefmt:`float`
   :Default: :d:`1.5`
   :Scope:     :z:`Enzo`

   :e:`Modifies the disipation of the slope limiter of the`
   ``"plm"``/``"plm_enzo"`` :e:`piecewise linear reconstruction
   algorithm.  For more details, see` :ref:`using-vlct-reconstruction`

----

Deprecated mhd_vlct parameters
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
The following parameters have all been deprecated and will be removed
in a future version of Enzo-E. Going forwards, the corresponding
parameters in :par:paramfmt:`Physics:fluid_props` should be used instead.

----

.. par:parameter:: Method:mhd_vlct:dual_energy

   :Summary: :s:`Whether to use dual-energy formalism`
   :Type:   :par:typefmt:`logical`
   :Default: :d:`false`
   :Scope:     :z:`Enzo`

   :e:`Whether to use the dual-energy formalism.`

----

.. par:parameter:: Method:mhd_vlct:dual_energy_eta

   :Summary: :s:`Dual energy parameter eta`
   :Type:   :par:typefmt:`float`
   :Default: :d:`0.001`
   :Scope:     :z:`Enzo`

   :e:`Dual-energy formalism parameter.`

----

.. par:parameter:: Method:mhd_vlct:density_floor

   :Summary: :s:`Lower limit on density`
   :Type:   :par:typefmt:`float`
   :Default: :d:`none`
   :Scope:     :z:`Enzo`

   :e:`Density floor, which must exceed 0. This is applied during
   reconstruction and quantity updates.`

----

.. par:parameter:: Method:mhd_vlct:pressure_floor

   :Summary: :s:`Lower limit on thermal pressure`
   :Type:   :par:typefmt:`float`
   :Default: :d:`none`
   :Scope:     :z:`Enzo`

   :e:`Thermal pressure floor, which must exceed 0. This is applied during
   reconstruction and quantity updates.`