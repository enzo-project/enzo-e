Enzo-E Output
-------------

The output log is useful for monitoring different aspects of the
simulation and making sure it is working as expected.  Each line has
three or four parts, depending on whether it's a serial or parallel
run.  If the run is parallel, the first part shows the processor
number.  The remaining parts show the time since the application
began, the code component that is displaying the line, and the content
of the log message.

The first section after the header banner shows the compile-time
configuration settings:

  ::

    0 00000.02  (*) CONFIG_PRECISION_SINGLE
    0 00000.02  ( ) CONFIG_PRECISION_DOUBLE
    0 00000.02  ( ) CONFIG_PRECISION_QUAD
    0 00000.02  
    0 00000.02  ( ) CONFIG_USE_CHARM
    0 00000.02  (*) CONFIG_USE_MPI
    0 00000.02  
    0 00000.02  [*] CONFIG_USE_PAPI

Here this shows that Enzo-E was compiled using single precision
floating point data, MPI was used, and the optional PAPI performance
API was used.

Next, Enzo-E displays all parameters as they are accessed in the code:

  :: 

    0 00000.02  Parameters  read in input/test_enzo-p_2.in
    0 00000.03  Parameters  accessed Physics:dimensions 2
    0 00000.03  Parameters  accessed Field:fields[0] "density"
    0 00000.03  Parameters  accessed Field:fields[1] "velocity_x"
    0 00000.03  Parameters  accessed Field:fields[2] "velocity_y"

    ...

Note that if a parameter is accessed that was not in the input file,
the text "[default]" is displayed after the default value used. One
can thus get a list of all parameter's defaults used by grepping the
output for "[default]".

As the simulation gets underway, the Simulation component of Cello
writes out a status line for each cycle.  This includes the cycle
number, the current simulation time in code units, and the current
timestep value:

  ::

    0 00000.05  Simulation  cycle 0000 time  0.000000000000 dt 0.0039929789491
    0 00000.07  Simulation  cycle 0001 time  0.003992978949 dt 0.00291050621308
    0 00000.08  Simulation  cycle 0002 time  0.006903485162 dt 0.00283146020956
    0 00000.09  Simulation  cycle 0003 time  0.009734945372 dt 0.0027214360889

Interleaved with the Simulation output may be status lines from other
components, such as the Memory component.  The Memory component
outputs the current number of dynamically allocated bytes on the heap,
as well as a modified "high water" value.  The modified high water
value is a high water value reset at each cycle, thus showing the
largest number of bytes allocated over the past cycle:

  ::

    0 00000.06  Memory                 bytes 48615 bytes_high 151930
    0 00000.07  Memory                 bytes 48615 bytes_high 201711
    0 00000.08  Memory                 bytes 48615 bytes_high 201711
    0 00000.10  Memory                 bytes 48615 bytes_high 201711

Whenever output is performed, the corresponding Output group displays
a line including the type of output and the file name:

  ::

    0 00000.04  Output      writing image file E-010.png

When the simulation concludes, various components may output status
information.  For example, if Enzo-E was compiled using the optional
PAPI library, a brief performance summary is displayed:

  ::

    0 00004.77  Performance  PAPI Time real   = 4.732030
    0 00004.77  Performance  PAPI Time proc   = 2.990128
    0 00004.77  Performance  PAPI GFlop count = 1.087303
    0 00004.77  Performance  PAPI GFlop rate  = 0.229775

Other Performance data obtained from the rusage() system call will be
output as well:

  ::

    0 00004.77  Performance  real time = 4.732035
    0 00004.77  Performance  utime = 2.260000
    0 00004.77  Performance  stime = 0.070000
    0 00004.77  Performance   maximum resident set size: 24412160
    0 00004.77  Performance   page reclaims (soft page faults): 6326
    0 00004.77  Performance   block output operations: 456
    0 00004.77  Performance   voluntary context switches: 28
    0 00004.77  Performance   involuntary context switches: 16827
    0 00004.77  Performance  hostid = 8323329

If everything worked correctly, output E-\*.png files (specifically
E-000.png, E-100.png, E-200.png, and E-500.png) should look like this:

.. image:: E-000.png
.. image:: E-100.png
.. image:: E-200.png
.. image:: E-500.png
