Domain {
   lower = [0.0, 0.0];
   upper = [1.0, 1.0];
}

Boundary {
   type = "periodic";
}

Mesh {
   root_rank = 2;
   root_size   = [512,512];
   root_blocks = [  16,  16];	     
}

Adapt {
   list = ["te_slope"];
   te_slope {
      type = "slope";
      field_list = ["total_energy"];
      min_refine = 1e3;
   };
   max_level = 3;
}

Initial {
   list = ["value","soup"];
   value {
      density = [ 0.125, x + y < 0.5,
                    1.0 ];
      total_energy = [ 0.14 / (0.4 * 0.125), x + y < 0.5,
                       1.0  / (0.4 * 1.0) ];
      velocity_x      = 0.0;
      velocity_y      = 0.0;
      internal_energy = 0.0;
       pressure = 0.0;
   } 
   soup {
   	file = "input/soup.png";
	rank = 2;
	array = [8,8];
	d_size = [0.02, 0.02];
   }
}
Method {
   list = ["ppm"];
   courant = 0.5;
}
 include "input/flux_correct.incl"

Field {
   ghost_depth = 4;
   
   list = ["density",
   	   "velocity_x",
	   "velocity_y",
	   "internal_energy",
	   "total_energy",
	   "pressure"];
}

Output { 

   list = [ "de", "te", "mesh", "proc" ];

   de {
      name = ["de-%04d.png","cycle"];
      type     = "image";
      field_list = ["density"];
      include "input/Schedule/schedule_cycle_10.incl"
      include "input/Colormap/colormap_blackbody.incl";
      image_size = [1024,1024];      	      
   }
   te {
      name = ["te-%04d.png","cycle"];
      type     = "image";
      field_list = ["total_energy"];
      include "input/Schedule/schedule_cycle_10.incl"
      include "input/Colormap/colormap_blackbody.incl";
      image_size = [1024,1024];      	      
   }

   data {
      name = ["data-%04d-%02d.h5","cycle","proc"];
      type     = "data";
      include "input/Schedule/schedule_cycle_100.incl"
      image_size = [1024,1024];      	      
   }
   mesh {
      	type     = "image";
	image_type  = "mesh";
	image_reduce_type = "max";
	include "input/Schedule/schedule_cycle_10.incl"
	include "input/Colormap/colormap_rainbow.incl"
        name = ["mesh-%04d.png","cycle"];
      image_size = [1025,1025];      	      
        
   }
   proc {
      	type     = "image";
	image_type  = "mesh";
	image_reduce_type = "max";
           image_min = 0.0;
           image_max = 1.0;
           image_mesh_color = "process";
	include "input/Schedule/schedule_cycle_10.incl"
	include "input/Colormap/colormap_rainbow.incl"
        name = ["proc-%04d.png","cycle"];
      image_size = [1025,1025];      	      
        
      }
}

Stopping {
   cycle = 1000;	 
}

# include "input/Hydro/tracer.incl"
