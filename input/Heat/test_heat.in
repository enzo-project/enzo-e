# Problem: 2D Heat Equation solved with Forward Euler
# Author:  James Bordner (jobordner@ucsd.edu)
#
# Cleaned up 2015-09-30

#======================================================================
# PROBLEM DEFINITION
#======================================================================

 Domain {
     lower = [ 0.0, 0.0 ];
     upper = [ 1.0, 1.0 ];
 }

 Initial {
    list = ["value"];

    value {
        temperature = [ 1.0, "input/enzop-cello-half.png", 0.010000 ];
    }
 }

 Boundary {
     type = "periodic";
 }

 Stopping {
     cycle = 1000;
     time = 0.10000;
 }

#======================================================================
# DISCRETIZATION
#======================================================================

 Mesh {
     root_rank = 2;
     root_size   = [ 64, 32 ];  # total number of cells in root grid
     root_blocks = [  4,  2 ];  # number of blocks in root grid
                                # (so block size = (64/4,32/2) = (16,16)
 }

 Adapt {
     list = [ "slope" ];
     max_level = 5;
     slope {
         field_list = [ "temperature" ];
         max_coarsen = 10.0;
         min_refine = 20.0;
         type = "slope";
     }
 }

 Field {
     alignment = 8;
     gamma = 1.4000;
     ghost_depth = 4;
     list = [ "temperature" ];
     padding = 0;
 }

#======================================================================
# COMPUTATION
#======================================================================

 Method {

     # "heat": heat equation solved with Forward Euler

     list = [ "heat" ];

     heat {
         courant = 0.50000;
         alpha = 1.0;
     }
 }

#======================================================================
# OUTPUT
#======================================================================

 Output {

     list = [ "temp", "mesh" ];

     temp {

         type = "image";
         field_list = [ "temperature" ];
         name = [ "heat-temp-%05d.png", "cycle" ];

         schedule {
             step = 100;
             var = "cycle";
         }

         include "input/Colormap/colormap_blackbody.incl"

         image_min = 0.0;
         image_max = 1.0;

         image_size = [ 1024, 512 ];

     }

     mesh {
         type = "image";
         field_list = [ "temperature" ];
         name = [ "heat-mesh-%05d.png", "cycle" ];

         schedule {
             step = 100;
             var = "cycle";
         }

         include "input/Colormap/colormap_rainbow.incl"

         image_type = "mesh";
         image_min = 0.0;
         image_max = 6.0;
         image_size = [ 1025, 513 ];
     }

 }
