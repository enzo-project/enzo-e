# intended to be used for automated tests of new-style Checkpoint-Restart
#
# an important requirement for these tests is that all executed produce
# bitwise-reproducible, deterministic results

   Adapt {
      max_initial_level = 0;
      min_level = -1;
      max_level = 0;
   }

   Domain {
      lower = [0.0, 0.0, 0.0];
      upper = [1.0, 0.5, 0.5];
   }

   Boundary {
      type = "periodic";
   }

   Mesh {
      root_rank = 3; # 3D
      root_blocks = [2,2,2];
      root_size = [16,16,16]; # number of cells per axis
   }

   Method {
      list = ["order_morton", "check", "ppm"];

      order_morton {
          schedule {
             list = [2, 4];
             var = "cycle";
          };
      };

      check {
          dir = [ "Check-%02d", "cycle" ];
          num_files = 2;
          ordering = "order_morton";
          include_ghosts = false; # the program encounters an error on restart
                                  # when this is true
          schedule {
             list = [2, 4];
             var = "cycle";
          };
      };

      ppm {
         courant = 0.5;
         diffusion = false;
         dual_energy = false;
      };
   }

   Field {
      list = ["density", "velocity_x", "velocity_y", "velocity_z",
              "total_energy","internal_energy", "pressure"];

      gamma = 1.6666666666666667;
      
      ghost_depth = 4;
      padding = 0;
      alignment = 8;
   }

   Group {
      list = ["derived"];
      derived {
         field_list = ["pressure"];
      }
   }


   Initial{
      list = ["inclined_wave"];

      inclined_wave{
         # the wave is aligned with the x-axis
         alpha = 0.;
         beta = 0.;

         lambda = 1.;
         amplitude = 1.e-6;
         wave_type = "sound";
      };
   }

   Stopping {
      cycle = 5;
   }

   #Output {
   #   data {
   #      dir = [ "data_%02d", "cycle" ];
   #      field_list = [ "density", "velocity_x", "velocity_y", "velocity_z",
   #                     "pressure", "total_energy" ];
   #      name = [ "data-%03d.h5", "proc" ];
   #      schedule {
   #          list = [3];
   #          var = "cycle";
   #      };
   #      type = "data";
   #   };
   #   list = [ "data" ];
   #}