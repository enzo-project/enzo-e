# File:    pm2.incl
# Problem: 2D Particle Mesh include
# Author:  James Bordner (jobordner@ucsd.edu)

   Domain { 
      lower = [0.0, 0.0];
      upper = [1.0, 1.0];
   } 

   Mesh { 
      root_rank = 2;
      root_size = [128, 128];
   }

   # Field parameters include those concerning fields as a group, as
   # well as individual fields
   
   Field {

      ghost_depth = 4;

      list = [
	"density",	
	"velocity_x",
	"velocity_y",
	"total_energy",
	"internal_energy",
	"pressure",
	"potential",
	"density_total",
	"density_particle",
	"density_gas",
	"density_particle_accumulate",
	"acceleration_x",
	"acceleration_y", "B", "R0" ] ;

      gamma = 1.4;

      padding   = 0;
      alignment = 8;    
   }

   Particle {

      list += ["dark"];

      dark {
          group_list = ["has_mass"];

	  attributes = ["x", "default",
                        "y", "default",
			"vx", "default",
                        "vy", "default",
			"ax", "default",
                        "ay", "default"];

          constants = ["mass", "double", 2e33];
          position = ["x","y"];
          velocity = ["vx","vy"];
      }
		    
   }
   Method {

      # list of methods to apply and in what order
 
      list = ["pm_deposit", "gravity", "pm_update"];

      ppm {

         courant   = 0.8;

         # method-specific parameters

         diffusion   = true;
         flattening  = 3;
         steepening  = true;

         dual_energy = false;
     }
     gravity {
        solver = "gravity";
     }
   }

   Solver {
      list = ["gravity"];
      gravity {
         type = "bicgstab";
         iter_max = 100;
         res_tol  = 1e-3;
      }
   }
   Initial {
      list = ["pm"];
      value {
         density = [ 1000.0, 
	 	              (x - 0.5)*(x - 0.5) +
	 	              (y - 0.5)*(y - 0.5) < 0.05,
                       0.125 ];
         total_energy = [ 1.0  / (0.4 * 1000.0), 
	 	              (x - 0.5)*(x - 0.5) +
	 	              (y - 0.5)*(y - 0.5) < 0.05,
                          0.14 / (0.4 * 0.125) ];
         velocity_x      = 0.0;
         velocity_y      = 0.0;
         acceleration_x      = 0.0;
         acceleration_y      = 0.0;
         internal_energy = 0.0;
         pressure = 0.0;
	 density_total = 0.0;
      } 
      pm {
        max_level = 5;
        mpp = 0.0;
	mask = (x - 0.5)*(x - 0.5) + (y - 0.5)*(y - 0.5) < 0.05;
      }
   }

   Boundary { type = "periodic"; }

   Stopping {        cycle = 10;   } 
   Testing {   cycle_final = 400; }

# OLD TIME
#   Testing {  time_final  = 1.03693807162344;  } 
# TIME FOR UPDATED InitialDefault
   Testing {  time_final  = 1.04044035614817; }

   Output { 

      list = [ "de", "dm", "dt", "mesh", "po" ];

    mesh {
	type     = "image";
	image_type  = "mesh";
	image_reduce_type = "max";
	image_size = [1025,1025];
        include "input/schedule_cycle_5.incl"
	image_min = 0.0;
	image_max = 8.0;
        include "input/colormap_rainbow.incl"
      }

      de {
	image_size = [1024,1024];
	type     = "image";
        field_list = ["density"];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      ax {
	type     = "image";
	image_size = [1024,1024];
        field_list = ["acceleration_x"];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      ay {
	type     = "image";
	image_size = [1024,1024];
        field_list = ["acceleration_y"];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      dmax {
	type     = "image";
	particle_list = ["dark"];
	image_color_particle_attribute = "ax";
	image_size = [1024,1024];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      dmay {
	type     = "image";
	particle_list = ["dark"];
	image_color_particle_attribute = "ay";
	image_size = [1024,1024];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      dm {
	type     = "image";
	particle_list = ["dark"];
	image_size = [1024,1024];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
	image_min = 0.0;
	image_max = 8.0;
      }

      dt {
	type     = "image";
        field_list = ["density_total"];
	image_size = [1024,1024];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
	image_min = 0.0;
	image_abs = true;
      }

      po {
	type     = "image";
	image_size = [1024,1024];
        field_list = ["potential"];
        include "input/schedule_cycle_5.incl"
        include "input/colormap_blackbody.incl";
      }

      data {
	type     = "data";
        field_list = ["density_total"];
	particle_list = ["dark"];
        include "input/schedule_cycle_5.incl"
      }

   }
