# Problem: 2D Implosion problem
# Author:  James Bordner (jobordner@ucsd.edu)

include "input/PPM/ppm.incl"


Mesh 
{
   root_rank = 2;
   root_size   = [32,32];
   root_blocks = [ 2, 2]; 
}

Adapt {
   max_level   = 5; 
   list = ["slope"];
   slope {
       type = "slope";
       field_list = ["density"];
       min_refine = 4.0;
       max_coarsen = 1.0; 
   }
} 

Field {
   ghost_depth = 4;
}

Initial {

   max_level = 5;

   list = ["value"];

   value {

     density      = [ 1.0, "input/test_balance.png", 
                      0.1 ];
     total_energy = [  0.1 / (0.4 * 0.1), "input/test_balance.png",
                       1.0 / (0.4 * 1.0)  ];
   }
}


Stopping { cycle = 100; }
Testing  { cycle_final = 100; 
           time_final  = [0.0151004312488712];
	   }

Output {

   list = ["mesh","de","te","vx","vy"]; 
#   list = []; 

      de {
	type     = "image";
	image_type  = "data";
	image_size  = [1024,1024];
#	image_ghost  = true;
        field_list = ["density"];
        include "input/Schedule/schedule_cycle_10.incl"
        colormap = [0.0, 0.0, 0.0,  
                    1.0, 0.0, 0.0, 
                    1.0, 1.0, 0.0, 
                    1.0, 1.0, 1.0];
        name = ["mesh-balanced-de.%03d.png","cycle"];
      }
      te {
	type     = "image";
	image_type  = "data";
	image_size  = [1024,1024];
#	image_ghost  = true;
        field_list = ["total_energy"];
        include "input/Schedule/schedule_cycle_10.incl"
        colormap = [0.0, 0.0, 0.0,  
                    1.0, 0.0, 0.0, 
                    1.0, 1.0, 0.0, 
                    1.0, 1.0, 1.0];
        name = ["mesh-balanced-te.%03d.png","cycle"];
      }
      vx {
	type     = "image";
	image_type  = "data";
	image_size  = [1024,1024];
#	image_ghost  = true;
        field_list = ["velocity_x"];
        include "input/Schedule/schedule_cycle_10.incl"
        colormap = [1.0, 0.0, 0.0,  
                    0.0, 0.0, 0.0,
                    0.0, 0.0, 1.0];
        name = ["mesh-balanced-vx.%03d.png","cycle"];
      }
      vy {
	type     = "image";
	image_type  = "data";
	image_size  = [1024,1024];
#	image_ghost  = true;
        field_list = ["velocity_y"];
        include "input/Schedule/schedule_cycle_10.incl"
        colormap = [1.0, 0.0, 0.0,  
                    0.0, 0.0, 0.0,
                    0.0, 0.0, 1.0];
        name = ["mesh-balanced-vy.%03d.png","cycle"];
      }
      mesh {
	type     = "image";
        image_face_rank = 0;
	image_type  = "mesh";
	image_reduce_type = "max";
        field_list = ["density"];
        # 	image_block_size  = 5; # DEPRECIATED
        image_size = [1025,1025];
        image_max = 6.000000000000000;
        image_min = 0.000000000000000;
        include "input/Schedule/schedule_cycle_10.incl"
        colormap = [1.0, 1.0, 1.0,  
                    1.0, 1.0, 0.0,
		    0.0, 1.0, 1.0,
		    1.0, 0.0, 1.0,
		    1.0, 0.0, 0.0,
		    0.0, 1.0, 0.0,
		    0.0, 0.0, 1.0];

        name = ["mesh-balanced-mesh.%03d.png","cycle"];
        
      }
}

Performance { warnings = true; }
